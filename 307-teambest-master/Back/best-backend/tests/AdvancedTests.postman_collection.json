{
	"info": {
		"_postman_id": "fa8713cb-94c8-49a4-a856-ff48373132bd",
		"name": "AdvancedTests",
		"description": "Tests functionality of the ad-campaign relationship.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Delete: /ads (all ads - empty database)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "46644122-3ac2-4900-be47-26d152f12339",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Successfully deleted all ads.\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						""
					]
				},
				"description": "Deletes all ads from the database."
			},
			"response": []
		},
		{
			"name": "Get: /ads (Check database is empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b528257b-5be6-4848-8dbd-67e553a691fa",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Return body is empty\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql([]);",
							"});",
							"pm.test(\"Test: Database contains 0 ads\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads"
					]
				},
				"description": "Checks if database is empty."
			},
			"response": []
		},
		{
			"name": "Post: /ads/test_1_c1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f1c43559-3dc7-41d9-97f0-fc754f012ee3",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Check for \\\"name\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"test_1_c1\");",
							"});",
							"pm.test(\"Test: Check for \\\"header\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.header).to.eql(\"test_1_c1_header\");",
							"});",
							"pm.test(\"Test: Check for \\\"subheader\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.subheader).to.eql(\"test_1_c1_subheader\");",
							"});",
							"pm.test(\"Test: Check for \\\"link\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link).to.eql(\"test_1_c1_website.com\");",
							"});",
							"pm.test(\"Test: Check for \\\"link_text\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link_text).to.eql(\"test_1_c1_link_text\");",
							"});",
							"pm.test(\"Test: Check for \\\"link_target_location\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link_target_location).to.eql(\"test_1_c1_link_target_location\");",
							"});",
							"pm.test(\"Test: Check for \\\"color_scheme\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.color_scheme).to.eql(\"test_1_c1_color\");",
							"});",
							"pm.test(\"Test: Check for \\\"start\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.start).to.eql(\"2015-01-01T22:30:00.000Z\");",
							"});",
							"pm.test(\"Test: Check for \\\"end\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.end).to.eql(\"2016-10-15T22:30:00.000Z\");",
							"});",
							"pm.test(\"Test: Check for \\\"campaign\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.campaign).to.eql(\"test_campaign_1\");",
							"});",
							"pm.test(\"Test: Check for \\\"location\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.location).to.eql(\"test_1_c1_location\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "test_1_c1",
							"type": "text"
						},
						{
							"key": "header",
							"value": "test_1_c1_header",
							"type": "text"
						},
						{
							"key": "subheader",
							"value": "test_1_c1_subheader",
							"type": "text"
						},
						{
							"key": "link",
							"value": "test_1_c1_website.com",
							"type": "text"
						},
						{
							"key": "link_text",
							"value": "test_1_c1_link_text",
							"type": "text"
						},
						{
							"key": "link_target_location",
							"value": "test_1_c1_link_target_location",
							"type": "text"
						},
						{
							"key": "color_scheme",
							"value": "test_1_c1_color",
							"type": "text"
						},
						{
							"key": "start",
							"value": "2015-01-01T22:30:00.000Z",
							"type": "text"
						},
						{
							"key": "end",
							"value": "2016-10-15T22:30:00.000Z",
							"type": "text"
						},
						{
							"key": "campaign",
							"value": "test_campaign_1",
							"type": "text"
						},
						{
							"key": "location",
							"value": "test_1_c1_location",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads"
					]
				},
				"description": "Posts an ad (test_4) to the database. Checks if the values for the ad are correct. This ad is part of campaign test_campaign_1."
			},
			"response": []
		},
		{
			"name": "Post: /ads/test_2_c1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f1c43559-3dc7-41d9-97f0-fc754f012ee3",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Check for \\\"name\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"test_2_c1\");",
							"});",
							"pm.test(\"Test: Check for \\\"header\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.header).to.eql(\"test_2_c1_header\");",
							"});",
							"pm.test(\"Test: Check for \\\"subheader\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.subheader).to.eql(\"test_2_c1_subheader\");",
							"});",
							"pm.test(\"Test: Check for \\\"link\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link).to.eql(\"test_2_c1_website.com\");",
							"});",
							"pm.test(\"Test: Check for \\\"link_text\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link_text).to.eql(\"test_2_c1_link_text\");",
							"});",
							"pm.test(\"Test: Check for \\\"link_target_location\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link_target_location).to.eql(\"test_2_c1_link_target_location\");",
							"});",
							"pm.test(\"Test: Check for \\\"color_scheme\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.color_scheme).to.eql(\"test_2_c1_color\");",
							"});",
							"pm.test(\"Test: Check for \\\"start\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.start).to.eql(\"2015-01-01T22:30:00.000Z\");",
							"});",
							"pm.test(\"Test: Check for \\\"end\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.end).to.eql(\"2016-10-15T22:30:00.000Z\");",
							"});",
							"pm.test(\"Test: Check for \\\"campaign\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.campaign).to.eql(\"test_campaign_1\");",
							"});",
							"pm.test(\"Test: Check for \\\"location\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.location).to.eql(\"test_2_c1_location\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "test_2_c1",
							"type": "text"
						},
						{
							"key": "header",
							"value": "test_2_c1_header",
							"type": "text"
						},
						{
							"key": "subheader",
							"value": "test_2_c1_subheader",
							"type": "text"
						},
						{
							"key": "link",
							"value": "test_2_c1_website.com",
							"type": "text"
						},
						{
							"key": "link_text",
							"value": "test_2_c1_link_text",
							"type": "text"
						},
						{
							"key": "link_target_location",
							"value": "test_2_c1_link_target_location",
							"type": "text"
						},
						{
							"key": "color_scheme",
							"value": "test_2_c1_color",
							"type": "text"
						},
						{
							"key": "start",
							"value": "2015-01-01T22:30:00.000Z",
							"type": "text"
						},
						{
							"key": "end",
							"value": "2016-10-15T22:30:00.000Z",
							"type": "text"
						},
						{
							"key": "campaign",
							"value": "test_campaign_1",
							"type": "text"
						},
						{
							"key": "location",
							"value": "test_2_c1_location",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads"
					]
				},
				"description": "Posts an ad (test_4) to the database. Checks if the values for the ad are correct. This ad is part of campaign test_campaign_1."
			},
			"response": []
		},
		{
			"name": "Get: /ads/test_campaign_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b528257b-5be6-4848-8dbd-67e553a691fa",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Database contains only 2 ads\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/campaign/test_campaign_1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						"campaign",
						"test_campaign_1"
					]
				},
				"description": "Checks if campaign \"test_campaign_1\" has only 2 ads."
			},
			"response": []
		},
		{
			"name": "Post: /ads/test_3_c2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f1c43559-3dc7-41d9-97f0-fc754f012ee3",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Check for \\\"name\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"test_3_c2\");",
							"});",
							"pm.test(\"Test: Check for \\\"header\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.header).to.eql(\"test_3_c2_header\");",
							"});",
							"pm.test(\"Test: Check for \\\"subheader\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.subheader).to.eql(\"test_3_c2_subheader\");",
							"});",
							"pm.test(\"Test: Check for \\\"link\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link).to.eql(\"test_3_c2_website.com\");",
							"});",
							"pm.test(\"Test: Check for \\\"link_text\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link_text).to.eql(\"test_3_c2_link_text\");",
							"});",
							"pm.test(\"Test: Check for \\\"link_target_location\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link_target_location).to.eql(\"test_3_c2_link_target_location\");",
							"});",
							"pm.test(\"Test: Check for \\\"color_scheme\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.color_scheme).to.eql(\"test_3_c2_color\");",
							"});",
							"pm.test(\"Test: Check for \\\"start\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.start).to.eql(\"2015-01-01T22:30:00.000Z\");",
							"});",
							"pm.test(\"Test: Check for \\\"end\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.end).to.eql(\"2016-10-15T22:30:00.000Z\");",
							"});",
							"pm.test(\"Test: Check for \\\"campaign\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.campaign).to.eql(\"test_campaign_2\");",
							"});",
							"pm.test(\"Test: Check for \\\"location\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.location).to.eql(\"test_3_c2_location\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "test_3_c2",
							"type": "text"
						},
						{
							"key": "header",
							"value": "test_3_c2_header",
							"type": "text"
						},
						{
							"key": "subheader",
							"value": "test_3_c2_subheader",
							"type": "text"
						},
						{
							"key": "link",
							"value": "test_3_c2_website.com",
							"type": "text"
						},
						{
							"key": "link_text",
							"value": "test_3_c2_link_text",
							"type": "text"
						},
						{
							"key": "link_target_location",
							"value": "test_3_c2_link_target_location",
							"type": "text"
						},
						{
							"key": "color_scheme",
							"value": "test_3_c2_color",
							"type": "text"
						},
						{
							"key": "start",
							"value": "2015-01-01T22:30:00.000Z",
							"type": "text"
						},
						{
							"key": "end",
							"value": "2016-10-15T22:30:00.000Z",
							"type": "text"
						},
						{
							"key": "campaign",
							"value": "test_campaign_2",
							"type": "text"
						},
						{
							"key": "location",
							"value": "test_3_c2_location",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads"
					]
				},
				"description": "Posts an ad (test_3_c2) to the database. Checks if the values for the ad are correct.\nThis ad is part of campaign test_campaign_2."
			},
			"response": []
		},
		{
			"name": "Get: /ads/test_campaign_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b528257b-5be6-4848-8dbd-67e553a691fa",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Campaign contains only 2 ads\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/campaign/test_campaign_1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						"campaign",
						"test_campaign_1"
					]
				},
				"description": "Checks if campaign \"test_campaign_1\" has only 2 ads (There are a total of 3 ads in the database)."
			},
			"response": []
		},
		{
			"name": "Get: /ads/test_campaign_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b528257b-5be6-4848-8dbd-67e553a691fa",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Campaign contains only 1 ad\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/campaign/test_campaign_2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						"campaign",
						"test_campaign_2"
					]
				},
				"description": "Checks if campaign \"test_campaign_2\" has only 1 ad (There are a total of 3 ads in the database)."
			},
			"response": []
		},
		{
			"name": "Get: /ads/test_campaign_3 (Check empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b528257b-5be6-4848-8dbd-67e553a691fa",
						"exec": [
							"pm.test(\"Status: Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Test: Body matches string\", function () {",
							"    pm.response.to.have.body(\"No ads associated with the given campaign were found.\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/campaign/test_campaign_3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						"campaign",
						"test_campaign_3"
					]
				},
				"description": "Checks if nonexistent campaign \"test_campaign_3\" has 0 ads."
			},
			"response": []
		},
		{
			"name": "Get: /ads",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b528257b-5be6-4848-8dbd-67e553a691fa",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Database contains only 3 ads\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(3);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads"
					]
				},
				"description": "Checks if database is contains only 3 ads."
			},
			"response": []
		},
		{
			"name": "Put: /ads/test_2_c2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f1c43559-3dc7-41d9-97f0-fc754f012ee3",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Check for \\\"name\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"test_2_c2\");",
							"});",
							"pm.test(\"Test: Check for \\\"header\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.header).to.eql(\"test_2_c2_header\");",
							"});",
							"pm.test(\"Test: Check for \\\"subheader\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.subheader).to.eql(\"test_2_c2_subheader\");",
							"});",
							"pm.test(\"Test: Check for \\\"link\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link).to.eql(\"test_2_c2_website.com\");",
							"});",
							"pm.test(\"Test: Check for \\\"link_text\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link_text).to.eql(\"test_2_c2_link_text\");",
							"});",
							"pm.test(\"Test: Check for \\\"link_target_location\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link_target_location).to.eql(\"test_2_c2_link_target_location\");",
							"});",
							"pm.test(\"Test: Check for \\\"color_scheme\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.color_scheme).to.eql(\"test_2_c2_color\");",
							"});",
							"pm.test(\"Test: Check for \\\"start\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.start).to.eql(\"2015-01-01T22:30:00.000Z\");",
							"});",
							"pm.test(\"Test: Check for \\\"end\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.end).to.eql(\"2016-10-15T22:30:00.000Z\");",
							"});",
							"pm.test(\"Test: Check for \\\"campaign\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.campaign).to.eql(\"test_campaign_2\");",
							"});",
							"pm.test(\"Test: Check for \\\"location\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.location).to.eql(\"test_2_c2_location\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "test_2_c2",
							"type": "text"
						},
						{
							"key": "header",
							"value": "test_2_c2_header",
							"type": "text"
						},
						{
							"key": "subheader",
							"value": "test_2_c2_subheader",
							"type": "text"
						},
						{
							"key": "link",
							"value": "test_2_c2_website.com",
							"type": "text"
						},
						{
							"key": "link_text",
							"value": "test_2_c2_link_text",
							"type": "text"
						},
						{
							"key": "link_target_location",
							"value": "test_2_c2_link_target_location",
							"type": "text"
						},
						{
							"key": "color_scheme",
							"value": "test_2_c2_color",
							"type": "text"
						},
						{
							"key": "start",
							"value": "2015-01-01T22:30:00.000Z",
							"type": "text"
						},
						{
							"key": "end",
							"value": "2016-10-15T22:30:00.000Z",
							"type": "text"
						},
						{
							"key": "campaign",
							"value": "test_campaign_2",
							"type": "text"
						},
						{
							"key": "location",
							"value": "test_2_c2_location",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/test_2_c2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						"test_2_c2"
					]
				},
				"description": "Puts an update for an ad (test_2_c1) to the database. Checks if the values for the updated ad are correct. The ad name has also been updated, so accessing the ad has also changed (test_2_c2)."
			},
			"response": []
		},
		{
			"name": "Get: /ads/test_campaign_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b528257b-5be6-4848-8dbd-67e553a691fa",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Campaign contains only 1 ad\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/campaign/test_campaign_1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						"campaign",
						"test_campaign_1"
					]
				},
				"description": "Checks if campaign \"test_campaign_1\" has only 1 ad (There are a total of 3 ads in the database)."
			},
			"response": []
		},
		{
			"name": "Get: /ads/test_campaign_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b528257b-5be6-4848-8dbd-67e553a691fa",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Campaign contains only 2 ads\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/campaign/test_campaign_2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						"campaign",
						"test_campaign_2"
					]
				},
				"description": "Checks if campaign \"test_campaign_2\" has only 2 ads (There are a total of 3 ads in the database)."
			},
			"response": []
		},
		{
			"name": "Get: /ads/test_campaign_3 (Check empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b528257b-5be6-4848-8dbd-67e553a691fa",
						"exec": [
							"pm.test(\"Status: Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Test: Body matches string\", function () {",
							"    pm.response.to.have.body(\"No ads associated with the given campaign were found.\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/campaign/test_campaign_3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						"campaign",
						"test_campaign_3"
					]
				},
				"description": "Checks if nonexistent campaign \"test_campaign_3\" has 0 ads."
			},
			"response": []
		},
		{
			"name": "Put: /ads/test_3_c2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4c38bf59-4f2d-4f49-bf2a-6524f20a47b5",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Check for \\\"name\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"test_3_c3\");",
							"});",
							"pm.test(\"Test: Check for \\\"header\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.header).to.eql(\"test_3_c3_header\");",
							"});",
							"pm.test(\"Test: Check for \\\"subheader\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.subheader).to.eql(\"test_3_c3_subheader\");",
							"});",
							"pm.test(\"Test: Check for \\\"link\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link).to.eql(\"test_3_c3_website.com\");",
							"});",
							"pm.test(\"Test: Check for \\\"link_text\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link_text).to.eql(\"test_3_c3_link_text\");",
							"});",
							"pm.test(\"Test: Check for \\\"link_target_location\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link_target_location).to.eql(\"test_3_c3_link_target_location\");",
							"});",
							"pm.test(\"Test: Check for \\\"color_scheme\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.color_scheme).to.eql(\"test_3_c3_color\");",
							"});",
							"pm.test(\"Test: Check for \\\"start\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.start).to.eql(\"2014-01-01T23:28:56.782Z\");",
							"});",
							"pm.test(\"Test: Check for \\\"end\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.end).to.eql(\"2018-01-01T23:28:56.782Z\");",
							"});",
							"pm.test(\"Test: Check for \\\"campaign\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.campaign).to.eql(\"test_campaign_3\");",
							"});",
							"pm.test(\"Test: Check for \\\"location\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.location).to.eql(\"test_3_c3_location\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "test_3_c3",
							"type": "text"
						},
						{
							"key": "header",
							"value": "test_3_c3",
							"type": "text"
						},
						{
							"key": "subheader",
							"value": "test_3_c3_subheader",
							"type": "text"
						},
						{
							"key": "link",
							"value": "test_3_c3_website.com",
							"type": "text"
						},
						{
							"key": "link_text",
							"value": "test_3_c3_link_text",
							"type": "text"
						},
						{
							"key": "link_target_location",
							"value": "test_3_c3_link_target_location",
							"type": "text"
						},
						{
							"key": "color_scheme",
							"value": "test_3_c3_color",
							"type": "text"
						},
						{
							"key": "start",
							"value": "2014-01-01T23:28:56.782Z",
							"type": "text"
						},
						{
							"key": "end",
							"value": "2018-01-01T23:28:56.782Z",
							"type": "text"
						},
						{
							"key": "campaign",
							"value": "test_campaign_3",
							"type": "text"
						},
						{
							"key": "location",
							"value": "test_3_c3_location",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/test_3_c2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						"test_3_c2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get: /ads/test_campaign_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b528257b-5be6-4848-8dbd-67e553a691fa",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Campaign contains only 1 ad\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/campaign/test_campaign_1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						"campaign",
						"test_campaign_1"
					]
				},
				"description": "Checks if campaign \"test_campaign_1\" has only 1 ad (There are a total of 3 ads in the database)."
			},
			"response": []
		},
		{
			"name": "Get: /ads/test_campaign_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b528257b-5be6-4848-8dbd-67e553a691fa",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Campaign contains only 1 ad\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/campaign/test_campaign_2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						"campaign",
						"test_campaign_2"
					]
				},
				"description": "Checks if campaign \"test_campaign_2\" has only 2 ads (There are a total of 3 ads in the database)."
			},
			"response": []
		},
		{
			"name": "Get: /ads/test_campaign_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b528257b-5be6-4848-8dbd-67e553a691fa",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Campaign contains only 1 ad\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/campaign/test_campaign_3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						"campaign",
						"test_campaign_3"
					]
				},
				"description": "Checks if nonexistent campaign \"test_campaign_3\" has 1 ads."
			},
			"response": []
		},
		{
			"name": "Put: /ads/test_1_c1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f1c43559-3dc7-41d9-97f0-fc754f012ee3",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Check for \\\"name\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"test_1_c3\");",
							"});",
							"pm.test(\"Test: Check for \\\"header\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.header).to.eql(\"test_1_c3_header\");",
							"});",
							"pm.test(\"Test: Check for \\\"subheader\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.subheader).to.eql(\"test_1_c3_subheader\");",
							"});",
							"pm.test(\"Test: Check for \\\"link\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link).to.eql(\"test_1_c3_website.com\");",
							"});",
							"pm.test(\"Test: Check for \\\"link_text\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link_text).to.eql(\"test_1_c3_link_text\");",
							"});",
							"pm.test(\"Test: Check for \\\"link_target_location\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link_target_location).to.eql(\"test_1_c3_link_target_location\");",
							"});",
							"pm.test(\"Test: Check for \\\"color_scheme\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.color_scheme).to.eql(\"test_1_c3_color\");",
							"});",
							"pm.test(\"Test: Check for \\\"start\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.start).to.eql(\"2015-01-01T22:30:00.000Z\");",
							"});",
							"pm.test(\"Test: Check for \\\"end\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.end).to.eql(\"2016-10-15T22:30:00.000Z\");",
							"});",
							"pm.test(\"Test: Check for \\\"campaign\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.campaign).to.eql(\"test_campaign_3\");",
							"});",
							"pm.test(\"Test: Check for \\\"location\\\"\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.location).to.eql(\"test_1_c3_location\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "test_1_c3",
							"type": "text"
						},
						{
							"key": "header",
							"value": "test_1_c3_header",
							"type": "text"
						},
						{
							"key": "subheader",
							"value": "test_1_c3_subheader",
							"type": "text"
						},
						{
							"key": "link",
							"value": "test_1_c3_website.com",
							"type": "text"
						},
						{
							"key": "link_text",
							"value": "test_1_c3_link_text",
							"type": "text"
						},
						{
							"key": "link_target_location",
							"value": "test_1_c3_link_target_location",
							"type": "text"
						},
						{
							"key": "color_scheme",
							"value": "test_1_c3_color",
							"type": "text"
						},
						{
							"key": "start",
							"value": "2015-01-01T22:30:00.000Z",
							"type": "text"
						},
						{
							"key": "end",
							"value": "2016-10-15T22:30:00.000Z",
							"type": "text"
						},
						{
							"key": "campaign",
							"value": "test_campaign_3",
							"type": "text"
						},
						{
							"key": "location",
							"value": "test_1_c3_location",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/test_1_c1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						"test_1_c1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get: /ads/test_campaign_1 (Check empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b528257b-5be6-4848-8dbd-67e553a691fa",
						"exec": [
							"pm.test(\"Status: Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Test: Body matches string\", function () {",
							"    pm.response.to.have.body(\"No ads associated with the given campaign were found.\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/campaign/test_campaign_1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						"campaign",
						"test_campaign_1"
					]
				},
				"description": "Checks if campaign \"test_campaign_1\" has only 1 ad (There are a total of 3 ads in the database)."
			},
			"response": []
		},
		{
			"name": "Get: /ads/test_campaign_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b528257b-5be6-4848-8dbd-67e553a691fa",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Campaign contains only 1 ad\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/campaign/test_campaign_2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						"campaign",
						"test_campaign_2"
					]
				},
				"description": "Checks if campaign \"test_campaign_2\" has only 2 ads (There are a total of 3 ads in the database)."
			},
			"response": []
		},
		{
			"name": "Get: /ads/test_campaign_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b528257b-5be6-4848-8dbd-67e553a691fa",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Campaign contains only 2 ads\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(2);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/campaign/test_campaign_3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						"campaign",
						"test_campaign_3"
					]
				},
				"description": "Checks if nonexistent campaign \"test_campaign_3\" has 1 ads."
			},
			"response": []
		},
		{
			"name": "Delete: /ads (all ads - empty database)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "46644122-3ac2-4900-be47-26d152f12339",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Successfully deleted all ads.\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads",
						""
					]
				},
				"description": "Deletes all ads from the database."
			},
			"response": []
		},
		{
			"name": "Get: /ads (Check database is empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "416096e6-104b-45b3-9ae3-01f2a7cb5e5e",
						"exec": [
							"pm.test(\"Status: Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Test: Empty return array\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql([]);",
							"});",
							"pm.test(\"Test: Database contains no ads\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/ads",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"ads"
					]
				},
				"description": "Checks if database is empty."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6bf0deb4-b1f0-4aac-9176-dfe60a5c521a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2a073ddc-d28e-49e3-978d-f2b231515468",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}